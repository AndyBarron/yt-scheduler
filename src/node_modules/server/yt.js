const axios = require('axios');
const lru = require('lru-cache');
const parseIsoDuration = require('parse-iso-duration');
const config = require('./config');

const cache = lru({
  max: 1000,
  maxAge: 5 * 60 * 1000, // 5 minutes
});

const request = async (endpoint, params = {}, method = 'GET') => {
  params.key = config.YOUTUBE_DATA_API_KEY;
  const q = Object.keys(params).sort().map((name) => `${name}=${params[name]}`).join('&');
  const url = `https://www.googleapis.com/youtube/v3/${endpoint}?${q}`;
  const cached = cache.get(url);
  if (cached) {
    return cached;
  }
  const res = await axios({
    method,
    url,
  });
  cache.set(url, res.data);
  return res.data;
};

const getVideoInfo = async (ids) => {
  const single = !Array.isArray(ids);
  if (single) {
    ids = [ids];
  }
  const params = {
    id: ids.join(','),
    part: 'contentDetails,snippet,status',
  };
  const data = await request('videos', params);
  const list = data.items.map((item) => {
    const {contentDetails, snippet, status} = item;
    const {thumbnails, title} = snippet;
    // default, medium, high, standard, maxres
    const thumbnailUrl = thumbnails.standard.url;
    const duration = parseIsoDuration(contentDetails.duration);
    const {embeddable} = status;
    return {
      duration,
      embeddable,
      thumbnailUrl,
      title,
    };
  });
  return single ? list[0] : list;
}

module.exports = {
  getVideoInfo,
};
